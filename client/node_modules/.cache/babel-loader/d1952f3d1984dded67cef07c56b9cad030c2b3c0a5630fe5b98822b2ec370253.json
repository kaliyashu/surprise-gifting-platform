{"ast":null,"code":"import _objectSpread from\"K:/Surprise Gifting Platform/Surprise Gifting Platform/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';// API base URL\nimport{jsx as _jsx}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Initial state\nconst initialState={user:null,token:localStorage.getItem('token'),loading:true,isAuthenticated:false};// Action types\nconst AUTH_ACTIONS={SET_LOADING:'SET_LOADING',SET_USER:'SET_USER',SET_TOKEN:'SET_TOKEN',LOGOUT:'LOGOUT',UPDATE_USER:'UPDATE_USER'};// Reducer\nconst authReducer=(state,action)=>{switch(action.type){case AUTH_ACTIONS.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case AUTH_ACTIONS.SET_USER:return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,isAuthenticated:true,loading:false});case AUTH_ACTIONS.SET_TOKEN:return _objectSpread(_objectSpread({},state),{},{token:action.payload,loading:false});case AUTH_ACTIONS.LOGOUT:return _objectSpread(_objectSpread({},state),{},{user:null,token:null,isAuthenticated:false,loading:false});case AUTH_ACTIONS.UPDATE_USER:return _objectSpread(_objectSpread({},state),{},{user:_objectSpread(_objectSpread({},state.user),action.payload)});default:return state;}};// Create context\nconst AuthContext=/*#__PURE__*/createContext();// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Set up axios defaults\nuseEffect(()=>{if(state.token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(state.token);}else{delete axios.defaults.headers.common['Authorization'];}},[state.token]);// Check if user is authenticated on app load\nuseEffect(()=>{const checkAuth=async()=>{if(state.token){try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/auth/me\"));dispatch({type:AUTH_ACTIONS.SET_USER,payload:{user:response.data.user,token:state.token}});}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');dispatch({type:AUTH_ACTIONS.LOGOUT});}}else{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};checkAuth();},[state.token,dispatch]);// Login function\nconst login=async(email,password)=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});const response=await axios.post(\"\".concat(API_BASE_URL,\"/auth/login\"),{email,password});const{user,token}=response.data;localStorage.setItem('token',token);dispatch({type:AUTH_ACTIONS.SET_USER,payload:{user,token}});toast.success('Welcome back!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';toast.error(message);dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});return{success:false,error:message};}};// Register function\nconst register=async userData=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});const response=await axios.post(\"\".concat(API_BASE_URL,\"/auth/register\"),userData);const{user,token}=response.data;localStorage.setItem('token',token);dispatch({type:AUTH_ACTIONS.SET_USER,payload:{user,token}});toast.success('Account created successfully! Please check your email to verify your account.');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';toast.error(message);dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});return{success:false,error:message};}};// Logout function\nconst logout=()=>{localStorage.removeItem('token');dispatch({type:AUTH_ACTIONS.LOGOUT});toast.success('Logged out successfully');};// Update user profile\nconst updateProfile=async userData=>{try{const response=await axios.put(\"\".concat(API_BASE_URL,\"/auth/profile\"),userData);dispatch({type:AUTH_ACTIONS.UPDATE_USER,payload:response.data.user});toast.success('Profile updated successfully');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profile update failed';toast.error(message);return{success:false,error:message};}};// Change password\nconst changePassword=async(currentPassword,newPassword)=>{try{await axios.post(\"\".concat(API_BASE_URL,\"/auth/change-password\"),{currentPassword,newPassword});toast.success('Password changed successfully');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Password change failed';toast.error(message);return{success:false,error:message};}};// Forgot password\nconst forgotPassword=async email=>{try{await axios.post(\"\".concat(API_BASE_URL,\"/auth/forgot-password\"),{email});toast.success('Password reset link sent to your email');return{success:true};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Password reset request failed';toast.error(message);return{success:false,error:message};}};// Reset password\nconst resetPassword=async(token,password)=>{try{await axios.post(\"\".concat(API_BASE_URL,\"/auth/reset-password\"),{token,password});toast.success('Password reset successfully');return{success:true};}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Password reset failed';toast.error(message);return{success:false,error:message};}};// Verify email\nconst verifyEmail=async token=>{try{await axios.get(\"\".concat(API_BASE_URL,\"/auth/verify/\").concat(token));if(state.user){dispatch({type:AUTH_ACTIONS.UPDATE_USER,payload:{isVerified:true}});}toast.success('Email verified successfully');return{success:true};}catch(error){var _error$response7,_error$response7$data;const message=((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Email verification failed';toast.error(message);return{success:false,error:message};}};const value=_objectSpread(_objectSpread({},state),{},{login,register,logout,updateProfile,changePassword,forgotPassword,resetPassword,verifyEmail});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsx","_jsx","API_BASE_URL","process","env","REACT_APP_API_URL","initialState","user","token","localStorage","getItem","loading","isAuthenticated","AUTH_ACTIONS","SET_LOADING","SET_USER","SET_TOKEN","LOGOUT","UPDATE_USER","authReducer","state","action","type","_objectSpread","payload","AuthContext","AuthProvider","_ref","children","dispatch","defaults","headers","common","concat","checkAuth","response","get","data","error","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","updateProfile","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","resetPassword","_error$response6","_error$response6$data","verifyEmail","isVerified","_error$response7","_error$response7$data","value","Provider","useAuth","context","Error"],"sources":["K:/Surprise Gifting Platform/Surprise Gifting Platform/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// API base URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: true,\r\n  isAuthenticated: false\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_USER: 'SET_USER',\r\n  SET_TOKEN: 'SET_TOKEN',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    \r\n    case AUTH_ACTIONS.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        loading: false\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    \r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (state.token) {\r\n        try {\r\n          const response = await axios.get(`${API_BASE_URL}/auth/me`);\r\n          dispatch({\r\n            type: AUTH_ACTIONS.SET_USER,\r\n            payload: {\r\n              user: response.data.user,\r\n              token: state.token\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, [state.token, dispatch]);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { user, token } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.SET_USER,\r\n        payload: { user, token }\r\n      });\r\n\r\n      toast.success('Welcome back!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\r\n      \r\n      const { user, token } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.SET_USER,\r\n        payload: { user, token }\r\n      });\r\n\r\n      toast.success('Account created successfully! Please check your email to verify your account.');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await axios.put(`${API_BASE_URL}/auth/profile`, userData);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.UPDATE_USER,\r\n        payload: response.data.user\r\n      });\r\n      toast.success('Profile updated successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/auth/change-password`, {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      toast.success('Password changed successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/auth/forgot-password`, { email });\r\n      toast.success('Password reset link sent to your email');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset request failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/auth/reset-password`, {\r\n        token,\r\n        password\r\n      });\r\n      toast.success('Password reset successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Verify email\r\n  const verifyEmail = async (token) => {\r\n    try {\r\n      await axios.get(`${API_BASE_URL}/auth/verify/${token}`);\r\n      if (state.user) {\r\n        dispatch({\r\n          type: AUTH_ACTIONS.UPDATE_USER,\r\n          payload: { isVerified: true }\r\n        });\r\n      }\r\n      toast.success('Email verified successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Email verification failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    verifyEmail\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}